
----------------------------------------------------------------------------
	

	local dialogWindow = {

		{'image',
			'center', ( real_sy - px(248) - px(60) ) * sx/real_sx,
			780, 248,
			':core/assets/images/npc_dialog/bg.png',
			color = {32,35,66,255},

			id = 'npc_dialog',

			anim_fix = true,

			onPreRender = function(element)

				local alpha = element:alpha()
				local x,y,w,h = element:abs()

				dxDrawImage(
					x + w/2 - 797/2,
					y + h/2 - 266/2 + 5,
					797, 266, ':core/assets/images/npc_dialog/bg_shadow.png',
					0, 0, 0, tocolor(32,35,66,255*alpha)
				)

			end,

			onInit = function(element)
				element.x0 = element[2]
			end,

			onRender = function(element)

				local alpha = element:alpha()

				element[2] = element.x0 + 50*(1-windowAlpha)
				local x,y,w,h = element:abs()

				dxDrawImage(
					x,y,w,h, ':core/assets/images/npc_dialog/lines.png',
					0, 0, 0, tocolor(180, 70, 70, 255*alpha)
				)

				local lw,lh = 49, 22
				local lx,ly = x + 250, y + 50

				dxDrawImage(
					lx,ly,lw,lh, ':core/assets/images/npc_dialog/line.png',
					0, 0, 0, tocolor(180,70,70,255*alpha)
				)

				dxDrawText('Джуди',
					lx+7, ly+3,
					lx+7, ly+3,
					tocolor(180, 70, 70, 255*alpha),
					0.5, 0.5, getFont('montserrat_bold', 35, 'light'),
					'left', 'bottom'
				)

				dxDrawImage(
					sx/2 - element[4]/2 - 351/2 + 70 - 50 * (1-windowAlpha), ( real_sy - px(472) )*sx/real_sx,
					351, 472, ':core/assets/images/npc_dialog/npc.png',
					0, 0, 0, tocolor(255,255,255,255*alpha)
				)

				local startY = ly + 30
				local startX = lx + 10

				for _, row in pairs( element.text or {} ) do

					local animData = getEasingValue( getAnimData(row.anim), 'InOutQuad' )

					local _x = startX - math.floor(10*(1-animData))
					drawSmartText(row.text,
						_x, _x, startY, 
						tocolor(255,255,255,255*alpha*animData),
						tocolor(255,255,255,255*alpha*animData),
						0.5, getFont('montserrat_semibold', 25, 'light'),
						'left', 22, 0
					)

					startY = startY + 22

				end

			end,

			loadReplica = function( element, replica )

				for _, element in pairs( element.elements ) do
					element:destroy()
				end

				if not replica then return closeWindow() end

				local section = element.structure[element.section].sections[replica]

				local text = section.text

				if type(section.text) == 'function' then
					text = section.text()
				end

				element.text = {}

				for index, row in pairs( text ) do

					local animId = 'npc-text-'..index

					table.insert( element.text, { text = row, anim = animId } )

					setAnimData(animId, 0.05)
					setTimer(animate, 100 + 200*(index - 1), 1, animId, 1)

				end

				element.elements = {}

				local x,y,w,h = element:abs()
				local bw,bh = 158, 48

				local startX = w-bw-50
				local startY = h-bh/2

				for _, action in pairs( section.actions ) do

					element:addElement(
						{'button',

							startX, startY,
							bw,bh,

							define_from = false,

							color = {230, 90, 90, 255},

							action.name,

							bg = ':core/assets/images/npc_dialog/button.png',
							scale = 0.5,
							font = getFont('montserrat_medium', 23, 'light'),

							onPreRender = function(element)

								local alpha = element:alpha()
								local x,y,w,h = element:abs()

								local shx,shy,shw,shh = x + w/2 - 198/2, y + h/2 - 90/2, 198, 90

								dxDrawImage(
									shx,shy,shw,shh, ':core/assets/images/npc_dialog/button_shadow.png',
									0, 0, 0, tocolor(230, 90, 90, 255*alpha*( 0.5 + 0.5*element.animData ))
								)

							end,

							anim_fix = true,

							onClick = function(element)

								local action = element.action.action

								if type(action) == 'function' then
									action = action()
								end

								element.parent:loadReplica(action)

							end,

							action = action,

						}
					)

					startX = startX - bw - 20

				end


			end,

			elements = {},

		},

	}

	function openDialog(structure, section)

		openWindow('npc_dialog')

		gui_get('npc_dialog').structure = structure
		gui_get('npc_dialog').section = section

		gui_get('npc_dialog'):loadReplica('main')

	end

	function closeDialog()
		closeWindow()
	end

----------------------------------------------------------------------------

	_loadGuiModule = loadGuiModule
	function loadGuiModule()
		windowModel.npc_dialog = dialogWindow
		_loadGuiModule()
	end

----------------------------------------------------------------------------
